.datalist > for model in ctx.props.models {
	.&__item {
		class: {
			&_active: ctx.props.active === model.id
			&_selected: ctx.props.selected[model.id]
		}

		.&__unread {
			class: { &_yes: model.is("flags.unread") }
			on-click: ctx.props.onunread(model);
		}

		bind false {
			.&__ava {
				style: "background-image: url(" + model.get("correspondents.from.0.avatars.default") + ")";
				on-click: (ctx.props.selected[model.id] = !ctx.props.selected[model.id], ctx.props.onselect(model));

				i.fa.fa-check-circle {}
			}

			a.&__user[href="#!{{'#message' | routeUrl:model}}"] {
				| {{ model.get('correspondents.from.0.name') || model.get('correspondents.from.0.email') }}
			}

			a.&__subj[href="#!{{'#message' | routeUrl:model}}"] | {{ model->subject }}
			i.&__ctrl.fa.fa-trash-o { on-click: ctx.props.ondelete(model) }
		}
	}
}
